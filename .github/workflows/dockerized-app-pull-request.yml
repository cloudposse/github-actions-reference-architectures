name: Reusable - Pull Request
on:
  workflow_call:
    inputs:
      organization:
        required: true
        type: string
      repository:
        required: true
        type: string
      registry:
        description: "Docker registry"
        required: false
        type: string
        default: registry.hub.docker.com
      open:
        required: true
        type: boolean
        default: true
      labels:
        required: true
        type: string
      ref:
        required: true
        type: string
    secrets:
      docker-login:
        required: true
      docker-password:
        required: true
      github-private-actions-pat:
        required: true

permissions:
  pull-requests: write
  deployments: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  context:
    runs-on: ubuntu-latest
    steps:
      - name: Preview deployments controller
        uses: cloudposse/github-action-preview-environment-controller@v0.7.0
        id: controller
        with:
          labels: ${{ inputs.labels }}
          open: ${{ inputs.open }}
          env-label: |
            preview: deploy

    outputs:
      namespace: ${{ inputs.ref }}
      labels_env: ${{ steps.controller.outputs.labels_env }}
      deploy_envs: ${{ steps.controller.outputs.deploy_envs }}
      destroy_envs: ${{ steps.controller.outputs.destroy_envs }}

  build:
    runs-on: ["self-hosted"]
    if: ${{ inputs.open }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        id: build
        uses: cloudposse/github-action-docker-build-push@0.1.0
        with:
          organization: ${{ inputs.organization }}
          repository: ${{ inputs.repository }}
          registry: ${{ inputs.registry }}
          login: ${{ secrets.docker-login }}
          password: ${{ secrets.docker-password }}

    outputs:
      image: ${{ steps.build.outputs.image }}
      tag: ${{ steps.build.outputs.tag }}

  test:
    runs-on: ["self-hosted"]
    if: ${{ inputs.open }}
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Tests
        id: test
        uses: cloudposse/github-action-docker-compose-test-run@0.1.0
        with:
          file: codefresh/test/docker-compose.yml
          service: app
          command: codefresh/test/test.sh

  deploy:
    runs-on: ["self-hosted"]
    if: ${{ needs.context.outputs.deploy_envs != '[]'  }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.deploy_envs) }}
    environment:
      name: ${{ matrix.env }}
      url: ${{ steps.deploy.outputs.webapp-url }}
    needs: [ context, build, test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Environment Info
        uses: cloudposse/github-action-interface-environment@0.1.0
        id: environment
        with:
          implementation_repository: cloudposse/actions-private
          implementation_path: 'environments'
          implementation_ref: main
          implementation_github_pat: ${{ secrets.github-private-actions-pat }}
          environment: ${{ matrix.env }}
          namespace: ${{ needs.context.outputs.namespace }}

      - name: Deploy
        uses: cloudposse/github-action-deploy-helmfile@0.1.0
        id: deploy
        with:
          aws-region: ${{ steps.environment.outputs.region }}
          base-role: ${{ steps.environment.outputs.role }}
          cluster: ${{ steps.environment.outputs.cluster }}
          cluster-role: ${{ steps.environment.outputs.cluster-role }}
          environment: ${{ steps.environment.outputs.name }}
          namespace: ${{ steps.environment.outputs.namespace }}
          image: ${{ needs.build.outputs.image }}
          image-tag: ${{ needs.build.outputs.tag }}
          operation: deploy
          debug: false
        env:
          ISTIO_INSTALLED: false
          COLOR: green
          RELEASE_NAME: example-app-green

  destroy:
    runs-on: ["self-hosted"]
    if: ${{ needs.context.outputs.destroy_envs != '[]'  }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.destroy_envs) }}
    permissions:
      pull-requests: write
      deployments: write
    needs: [ context ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Private actions
        uses: actions/checkout@v3
        with:
          repository: cloudposse/actions-private
          ref: main
          token: ${{ secrets.github-private-actions-pat }}
          path: .github/actions

      - name: Seek deployment
        uses: ./.github/actions/get_deployment
        id: deployment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          env-name: ${{ matrix.env }}
          ref-to-search: ${{ inputs.ref }}
          status: success

      - name: Environment Info
        uses: cloudposse/github-action-interface-environment@0.1.0
        if: ${{ steps.deployment.outputs.deploymentId != '' }}
        id: environment
        with:
          implementation_repository: cloudposse/actions-private
          implementation_path: 'environments'
          implementation_ref: main
          implementation_github_pat: ${{ secrets.github-private-actions-pat }}
          environment: ${{ matrix.env }}
          namespace: ${{ needs.context.outputs.namespace }}

      - name: Destroy
        uses: cloudposse/github-action-deploy-helmfile@0.1.0
        if: ${{ steps.deployment.outputs.deploymentId != '' }}
        id: deploy
        with:
          aws-region: ${{ steps.environment.outputs.region }}
          base-role: ${{ steps.environment.outputs.role }}
          cluster: ${{ steps.environment.outputs.cluster }}
          cluster-role: ${{ steps.environment.outputs.cluster-role }}
          environment: ${{ steps.environment.outputs.name }}
          namespace: ${{ steps.environment.outputs.namespace }}
          image: "<none>"
          image-tag: "<none>"
          operation: destroy
          debug: false
        env:
          ISTIO_INSTALLED: false
          COLOR: green
          RELEASE_NAME: example-app-green

      - name: Inactivate deployment
        uses: chrnorm/deployment-status@v2.0.0
        if: ${{ steps.deployment.outputs.deploymentId != '' }}
        with:
          state: inactive
          token: ${{ github.token }}
          deployment-id: ${{ steps.deployment.outputs.deploymentId }}

      - name: Cleanup label
        uses: ./.github/actions/preview_controller_label_cleanup
        if: ${{ ! inputs.open }}
        with:
          labels_env: ${{ needs.context.outputs.labels_env }}
          env: ${{ matrix.env }}
